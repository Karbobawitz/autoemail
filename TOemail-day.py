#File: TOemail-day.py

#Name: Alexander Karbo (Karbo)

#Date: 8/27/18

#Desc: This is TOemail-day.py, a script written to parse the .csv files 
#generated by autoemail.sh and return the values needed for mailsmp to send 
#the emails. You will need to customize this document with the emails of your 
#workstudy students. This file is identical to TOemail-week.py except it 
#searches for events tomorrow, not next week.See README.md for full 
#instructions or is all else fails contact the creator of this script: 
#Alexander Karbo at alexanderkarbo@gmail.com.

#Usage: This code is run by autoemail.sh to parse the TO signup sheet. You
#won't need to do much with this other than updating the emails and pathing. 

#---------------------------------------

#ENTER EMAILS HERE in the same order as they appear on the signupsheet

emails = []
emails.append("bedavis@davidson.edu")
emails.append("chdebeus@davidson.edu")
emails.append("hahill@davidson.edu")
emails.append("jareilly@davidson.edu")
emails.append("jostory@davidson.edu")
emails.append("kaalexis@davidson.edu")
emails.append("lupereira@davidson.edu")
emails.append("mehenry@davidson.edu")
emails.append("nynelson@davidson.edu")
emails.append("olswanson@davidson.edu")

#---------------------------------------

import csv #used to parse the csv files
import datetime #used to get the current date and do date arithmetic

tomorrow = datetime.date.today() + datetime.timedelta(days=1) #tomorrow is one day ahead of today
tomorrow = "{:%-m/%-d/%Y}".format(tomorrow) #change the format to match that of the csv file
print "\nChecking For TO Shows On %s\n" % tomorrow

with open('/Users/alkarbo/autoemail/TOsignup.csv', 'rb') as f: #open csv file
    data = list(csv.reader(f)) #turn csv file contents into a list
    ncols = len(data[0]) #find number of columns
    nrows = len(data) #find number of rows
    allinfo = [] #make a list to store info
    for i in range(ncols): #for all columns
        showinfo = [] #make a list to store that column's info
        if tomorrow == str(data[1][i]): #if the date of a show is next week
            a = i #store which column we are on
            for j in range(ncols): #try every column
                if str(data[0][a]) == "": #if the show name is blank
                    a = a-1 #move one column left (and then try again)
                else: #if the show name is not blank
                    showinfo.append(str(data[0][a])) #store the show name
                    break #stop searching for show name
            for j in range(5 + len(emails)): #go through the four rows of info plus the email rows
                showinfo.append(str(data[j+1][i])) #store the info
            allinfo.append(showinfo) #add this show's info the the general list of info
print "TO Show Info Saved. Shows Found: %s\n" % [i[0] for i in allinfo]

for i in range(len(allinfo)): #for each show
    for j in range(len(emails)): #for each student
        if allinfo[i][j+6] != "": #if there is anything written in the box in that student's row
            allinfo[i][j+6] = emails[j] #store their email address from the emails list in this file
    allinfo[i] = filter(None, allinfo[i]) #filter out the students who are not signed up
    allinfo[i].remove(str(allinfo[i][5])) #remove the "number needed" value
print "TO Email Info Tabulated:\n"
print allinfo

with open('/Users/alkarbo/autoemail/TOemail.sh', 'a+') as f: #open a file to write some custom bash code
    for i in range(len(allinfo)): #for each show
        f.write("mail -s 'You have a show Tomorrow! (On %s)' " % allinfo[i][1]) #begin the mail command and specifiy the subject of the email
        for j in range(len(allinfo[i])-4): #for each student signed up
            f.write("{0}, ".format(allinfo[i][j+4])) #add their email address as a recipient
        f.write("alkarbo@davidson.edu") #then add the manager
        f.write(" < /Users/alkarbo/autoemail/TOemail{0}_2.txt\n".format(i)) #specifiy the text of the email as a file 
        f.write("echo 'TO Emails Sent'\n")
        f.write("rm /Users/alkarbo/autoemail/TOemail{0}_2.txt\n".format(i)) #make the bash script delete the txt files

        with open('/Users/alkarbo/autoemail/TOemail{0}_2.txt'.format(i), "w+") as e: #make a file to be the text of the email
            e.write("\nYou have the show {0} at {1} in {2}. The call time is {3}.\n".format(allinfo[i][0], allinfo[i][2], allinfo[i][4], allinfo[i][3])) #add show info
            e.write("\nThe show is tomorrow so if you can't attend you are expected to already be in the process of finding someone to cover.\n") #more email message
            e.write("\nThis is an automated message, please do not reply.\n") #more message
            e.write("\nSincerely,\n\nKarbo's Robot\n") #more message
            e.close()

print "\nTO Email Script Written\n"
print "\n------------------------------------\n"
